{
   "swagger":"2.0",
   "basePath":null,
   "paths":{
      "//":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"This post method will relay on the call to privateapi",
            "operationId":"post_relay_request",
            "parameters":[
               {
                  "name":"payload",
                  "required":true,
                  "in":"body",
                  "schema":{
                     "$ref":"#/definitions/RelayModel"
                  }
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//auth":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"Authentication handler",
            "description":"Generating temporary access token based on provided key and secret.",
            "operationId":"post_auth",
            "parameters":[
               {
                  "name":"payload",
                  "required":true,
                  "in":"body",
                  "schema":{
                     "$ref":"#/definitions/Auth"
                  }
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//errors":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"Sends back current status and version of the api",
            "operationId":"post_errors",
            "tags":[
               ""
            ]
         }
      },
      "//get-static-configurations":{
         "post":{
            "responses":{
               "200":{
                  "description":"provide backend configuration settings to the frontend",
                  "schema":{
                     "$ref":"#/definitions/ConfigModel"
                  }
               }
            },
            "summary":"This method is used to provide backend configuration settings to the frontend",
            "operationId":"post_get_config",
            "tags":[
               ""
            ]
         }
      },
      "//public":{
         "post":{
            "responses":{
               "200":{
                  "description":"response_success_flag:True"
               },
               "400":{
                  "description":"response_success_flag:False"
               }
            },
            "summary":"This post method will relay text request to authapi",
            "operationId":"post_public_relay",
            "parameters":[
               {
                  "name":"text",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"subject",
                  "in":"query",
                  "type":"string"
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//status":{
         "get":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"Sends back current status and version of the api",
            "operationId":"get_status",
            "tags":[
               ""
            ]
         }
      },
      "//taskstatus/{task_id}":{
         "parameters":[
            {
               "name":"task_id",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ],
         "post":{
            "responses":{
               "200":{
                  "description":"Returns the Task Status and Result",
                  "schema":{
                     "$ref":"#/definitions/TaskStatus"
                  }
               }
            },
            "summary":"TODO 1 - research and implement a solution to run celery integration tests successfully on Windows",
            "description":"This method checks the task via task_id, and return the state, result and status_code.",
            "operationId":"post_task_status",
            "tags":[
               ""
            ]
         }
      },
      "//send/advanced-optimisation-notification":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"POST REQUEST FOR THIS API RESOURCE",
            "operationId":"post_send_advanced_optimisation_notification",
            "parameters":[
               {
                  "name":"recipient_email",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"full_name",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"optimisation_name",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"number_of_data_ids",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"start_time",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"end_time",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"name_of_rule",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"name_of_price_series",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"name_of_research_series",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"resultant_annualised_return",
                  "in":"query",
                  "type":"string",
                  "required":true
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/consolidated-optimisation-notification":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"POST REQUEST FOR THIS API RESOURCE",
            "operationId":"post_send_consolidated_optimisation_notification",
            "parameters":[
               {
                  "name":"recipient_email",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"full_name",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"number_of_optimisations",
                  "in":"query",
                  "type":"string",
                  "required":true
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/custom":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "operationId":"post_send_custom",
            "parameters":[
               {
                  "name":"targets",
                  "in":"query",
                  "type":"array",
                  "required":true,
                  "items":{
                     "type":"string"
                  },
                  "collectionFormat":"multi"
               },
               {
                  "name":"html_template",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"subject",
                  "in":"query",
                  "type":"string",
                  "required":true
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/delete-account":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "operationId":"post_send_account_deletion_code",
            "parameters":[
               {
                  "name":"recipient_email",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"temp_password",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"full_name",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"token_timeout",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"token_generated_time",
                  "in":"query",
                  "type":"string",
                  "required":true
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/delete-account-confirmation":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"Sends an account deletion email notification to user",
            "operationId":"post_send_delete_account_confirmation",
            "parameters":[
               {
                  "name":"recipient_email",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"full_name",
                  "in":"query",
                  "type":"string",
                  "required":true
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/new-account":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"Sends new account creation email and checks that it was delivered",
            "operationId":"post_send_account_creation_email",
            "parameters":[
               {
                  "name":"recipient_email",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"full_name",
                  "in":"query",
                  "type":"string",
                  "required":true
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/optimisation-notification":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"Sends an email notification after an optimisation is complete",
            "operationId":"post_send_optimisation_notification",
            "parameters":[
               {
                  "name":"recipient_email",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"full_name",
                  "in":"query",
                  "type":"string",
                  "required":true
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/referral-code":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "operationId":"post_send_referral",
            "parameters":[
               {
                  "name":"recipient_email",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"referral_code",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"full_name",
                  "in":"query",
                  "type":"string"
               },
               {
                  "name":"referral_reason",
                  "in":"query",
                  "type":"string",
                  "default":"COLLEAGUE"
               },
               {
                  "name":"referrer_name",
                  "in":"query",
                  "type":"string"
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/reset-password":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"Sends the password reset email, containing a code to enter via the frontend",
            "operationId":"post_send_reset_password",
            "parameters":[
               {
                  "name":"recipient_email",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"temp_password",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"full_name",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"url_of_reset_page",
                  "in":"query",
                  "type":"string",
                  "required":true
               }
            ],
            "tags":[
               ""
            ]
         }
      },
      "//send/support-notification":{
         "post":{
            "responses":{
               "200":{
                  "description":"Success"
               }
            },
            "summary":"Sends an account deletion email notification to user",
            "operationId":"post_send_support_notification",
            "parameters":[
               {
                  "name":"message",
                  "in":"query",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"subject",
                  "in":"query",
                  "type":"string"
               },
               {
                  "name":"target_email",
                  "in":"query",
                  "type":"string"
               },
               {
                  "name":"email_header",
                  "in":"query",
                  "type":"string"
               }
            ],
            "tags":[
               ""
            ]
         }
      }
   },
   "info":{
      "title":"Example API",
      "version":"2.0"
   },
   "produces":[
      "application/json"
   ],
   "consumes":[
      "application/json"
   ],
   "securityDefinitions":{
      "Bearer Auth":{
         "type":"apiKey",
         "in":"header",
         "name":"Authorization"
      }
   },
   "security":[
      {
         "Bearer Auth":[

         ]
      }
   ],
   "tags":[
      {
         "name":"default",
         "description":"Default namespace"
      },
      {
         "name":""
      }
   ],
   "definitions":{
      "/StatusModel":{
         "properties":{
            "status":{
               "type":"string"
            },
            "version":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "/Auth":{
         "properties":{
            "key":{
               "type":"string"
            },
            "secret":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "/Error":{
         "properties":{
            "Exception":{
               "$ref":"#/definitions/DataModel"
            }
         },
         "type":"object"
      },
      "/DataModel":{
         "properties":{
            "message":{
               "type":"string"
            },
            "status":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "/ConfigModel":{
         "properties":{
            "CALL_RESPONSE_TIMEOUT_SECS":{
               "type":"integer",
               "default":10
            },
            "PASSWORD_RESET_EMAIL_TIMEOUT_HOURS":{
               "type":"integer",
               "default":1
            },
            "COUNTRY LIST":{
               "$ref":"#/definitions/CountryList"
            }
         },
         "type":"object"
      },
      "/CountryList":{
         "properties":{

         },
         "type":"object"
      },
      "/RelayModel":{
         "properties":{
            "method_string":{
               "type":"string"
            },
            "service":{
               "type":"string"
            },
            "http_method":{
               "type":"string"
            },
            "endpoint":{
               "type":"string"
            },
            "payload":{
               "$ref":"#/definitions/Payload"
            }
         },
         "type":"object"
      },
      "/Payload":{
         "properties":{

         },
         "type":"object"
      },
      "/TaskStatus":{
         "properties":{
            "state":{
               "type":"string"
            },
            "result":{
               "type":"string"
            }
         },
         "type":"object"
      }
   },
   "responses":{
      "ParseError":{
         "description":"When a mask can't be parsed"
      },
      "MaskError":{
         "description":"When any error occurs on mask"
      }
   },
   "host":null,
   "schemes":[
      "http"
   ]
}