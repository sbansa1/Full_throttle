{
    "swagger": "2.0",
    "basePath": "/",
    "paths": {
        "/ping/ping": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Get Endpoint for Get Request",
                "operationId": "get_ping",
                "tags": [
                    "ping"
                ]
            }
        },
        "/user/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "operationId": "get_user_list",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "user"
                ]
            },
            "post": {
                "responses": {
                    "401": {
                        "description": "Sorry. That email already exists."
                    },
                    "201": {
                        "description": "<User_email> was added!"
                    }
                },
                "summary": "Api for User Registration",
                "operationId": "post_user_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/user/users/{user_id}": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "operationId": "get_user_by_id",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        }
    },
    "info": {
        "title": "TDD Api",
        "version": "1.0",
        "description": "All the endpoints for the Flask TDD Api"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [
        {
            "name": "ping",
            "description": "Testing..."
        },
        {
            "name": "user"
        }
    ],
    "definitions": {
        "User": {
            "required": [
                "email",
                "username"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}

